#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQL_LINQ_SAMPLE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TscRedesign")]
	public partial class myDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertDigitalRiverProduct(DigitalRiverProduct instance);
    partial void UpdateDigitalRiverProduct(DigitalRiverProduct instance);
    partial void DeleteDigitalRiverProduct(DigitalRiverProduct instance);
    partial void InsertSKU(SKU instance);
    partial void UpdateSKU(SKU instance);
    partial void DeleteSKU(SKU instance);
    #endregion
		
		public myDbDataContext() : 
				base(global::SQL_LINQ_SAMPLE.Properties.Settings.Default.TscRedesignConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public myDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<DigitalRiverProduct> DigitalRiverProducts
		{
			get
			{
				return this.GetTable<DigitalRiverProduct>();
			}
		}
		
		public System.Data.Linq.Table<SKU> SKUs
		{
			get
			{
				return this.GetTable<SKU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceID;
		
		private string _PriceGroupID;
		
		private string _PriceDesc;
		
		private string _PriceSeatRngMin;
		
		private string _PriceSeatRngMax;
		
		private string _SKUID;
		
		private decimal _PricePerUnit;
		
		private System.Nullable<int> _PayFrequencyID;
		
		private System.Nullable<int> _TrainingID;
		
		private bool _Active;
		
		private decimal _UpgradePrice;
		
		private EntityRef<SKU> _SKU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIDChanging(int value);
    partial void OnPriceIDChanged();
    partial void OnPriceGroupIDChanging(string value);
    partial void OnPriceGroupIDChanged();
    partial void OnPriceDescChanging(string value);
    partial void OnPriceDescChanged();
    partial void OnPriceSeatRngMinChanging(string value);
    partial void OnPriceSeatRngMinChanged();
    partial void OnPriceSeatRngMaxChanging(string value);
    partial void OnPriceSeatRngMaxChanged();
    partial void OnSKUIDChanging(string value);
    partial void OnSKUIDChanged();
    partial void OnPricePerUnitChanging(decimal value);
    partial void OnPricePerUnitChanged();
    partial void OnPayFrequencyIDChanging(System.Nullable<int> value);
    partial void OnPayFrequencyIDChanged();
    partial void OnTrainingIDChanging(System.Nullable<int> value);
    partial void OnTrainingIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnUpgradePriceChanging(decimal value);
    partial void OnUpgradePriceChanged();
    #endregion
		
		public Price()
		{
			this._SKU = default(EntityRef<SKU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PriceID
		{
			get
			{
				return this._PriceID;
			}
			set
			{
				if ((this._PriceID != value))
				{
					this.OnPriceIDChanging(value);
					this.SendPropertyChanging();
					this._PriceID = value;
					this.SendPropertyChanged("PriceID");
					this.OnPriceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceGroupID", DbType="VarChar(15)")]
		public string PriceGroupID
		{
			get
			{
				return this._PriceGroupID;
			}
			set
			{
				if ((this._PriceGroupID != value))
				{
					this.OnPriceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PriceGroupID = value;
					this.SendPropertyChanged("PriceGroupID");
					this.OnPriceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDesc", DbType="NVarChar(24)")]
		public string PriceDesc
		{
			get
			{
				return this._PriceDesc;
			}
			set
			{
				if ((this._PriceDesc != value))
				{
					this.OnPriceDescChanging(value);
					this.SendPropertyChanging();
					this._PriceDesc = value;
					this.SendPropertyChanged("PriceDesc");
					this.OnPriceDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSeatRngMin", DbType="NVarChar(10)")]
		public string PriceSeatRngMin
		{
			get
			{
				return this._PriceSeatRngMin;
			}
			set
			{
				if ((this._PriceSeatRngMin != value))
				{
					this.OnPriceSeatRngMinChanging(value);
					this.SendPropertyChanging();
					this._PriceSeatRngMin = value;
					this.SendPropertyChanged("PriceSeatRngMin");
					this.OnPriceSeatRngMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSeatRngMax", DbType="NVarChar(10)")]
		public string PriceSeatRngMax
		{
			get
			{
				return this._PriceSeatRngMax;
			}
			set
			{
				if ((this._PriceSeatRngMax != value))
				{
					this.OnPriceSeatRngMaxChanging(value);
					this.SendPropertyChanging();
					this._PriceSeatRngMax = value;
					this.SendPropertyChanged("PriceSeatRngMax");
					this.OnPriceSeatRngMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUID", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SKUID
		{
			get
			{
				return this._SKUID;
			}
			set
			{
				if ((this._SKUID != value))
				{
					if (this._SKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUIDChanging(value);
					this.SendPropertyChanging();
					this._SKUID = value;
					this.SendPropertyChanged("SKUID");
					this.OnSKUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerUnit", DbType="Money NOT NULL")]
		public decimal PricePerUnit
		{
			get
			{
				return this._PricePerUnit;
			}
			set
			{
				if ((this._PricePerUnit != value))
				{
					this.OnPricePerUnitChanging(value);
					this.SendPropertyChanging();
					this._PricePerUnit = value;
					this.SendPropertyChanged("PricePerUnit");
					this.OnPricePerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequencyID", DbType="Int")]
		public System.Nullable<int> PayFrequencyID
		{
			get
			{
				return this._PayFrequencyID;
			}
			set
			{
				if ((this._PayFrequencyID != value))
				{
					this.OnPayFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._PayFrequencyID = value;
					this.SendPropertyChanged("PayFrequencyID");
					this.OnPayFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingID", DbType="Int")]
		public System.Nullable<int> TrainingID
		{
			get
			{
				return this._TrainingID;
			}
			set
			{
				if ((this._TrainingID != value))
				{
					this.OnTrainingIDChanging(value);
					this.SendPropertyChanging();
					this._TrainingID = value;
					this.SendPropertyChanged("TrainingID");
					this.OnTrainingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradePrice", DbType="Money NOT NULL")]
		public decimal UpgradePrice
		{
			get
			{
				return this._UpgradePrice;
			}
			set
			{
				if ((this._UpgradePrice != value))
				{
					this.OnUpgradePriceChanging(value);
					this.SendPropertyChanging();
					this._UpgradePrice = value;
					this.SendPropertyChanged("UpgradePrice");
					this.OnUpgradePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SKU_Price", Storage="_SKU", ThisKey="SKUID", OtherKey="SKUID", IsForeignKey=true)]
		public SKU SKU
		{
			get
			{
				return this._SKU.Entity;
			}
			set
			{
				SKU previousValue = this._SKU.Entity;
				if (((previousValue != value) 
							|| (this._SKU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SKU.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._SKU.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._SKUID = value.SKUID;
					}
					else
					{
						this._SKUID = default(string);
					}
					this.SendPropertyChanged("SKU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DigitalRiverProducts")]
	public partial class DigitalRiverProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DigitalRiverID;
		
		private string _SKUID;
		
		private string _ShipMethodID;
		
		private string _OrdDetTypeID;
		
		private System.Nullable<int> _PayFrequencyID;
		
		private string _InternationalShipMethodId;
		
		private EntityRef<SKU> _SKU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDigitalRiverIDChanging(int value);
    partial void OnDigitalRiverIDChanged();
    partial void OnSKUIDChanging(string value);
    partial void OnSKUIDChanged();
    partial void OnShipMethodIDChanging(string value);
    partial void OnShipMethodIDChanged();
    partial void OnOrdDetTypeIDChanging(string value);
    partial void OnOrdDetTypeIDChanged();
    partial void OnPayFrequencyIDChanging(System.Nullable<int> value);
    partial void OnPayFrequencyIDChanged();
    partial void OnInternationalShipMethodIdChanging(string value);
    partial void OnInternationalShipMethodIdChanged();
    #endregion
		
		public DigitalRiverProduct()
		{
			this._SKU = default(EntityRef<SKU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitalRiverID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DigitalRiverID
		{
			get
			{
				return this._DigitalRiverID;
			}
			set
			{
				if ((this._DigitalRiverID != value))
				{
					this.OnDigitalRiverIDChanging(value);
					this.SendPropertyChanging();
					this._DigitalRiverID = value;
					this.SendPropertyChanged("DigitalRiverID");
					this.OnDigitalRiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUID", DbType="VarChar(12)")]
		public string SKUID
		{
			get
			{
				return this._SKUID;
			}
			set
			{
				if ((this._SKUID != value))
				{
					if (this._SKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUIDChanging(value);
					this.SendPropertyChanging();
					this._SKUID = value;
					this.SendPropertyChanged("SKUID");
					this.OnSKUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethodID", DbType="VarChar(8)")]
		public string ShipMethodID
		{
			get
			{
				return this._ShipMethodID;
			}
			set
			{
				if ((this._ShipMethodID != value))
				{
					this.OnShipMethodIDChanging(value);
					this.SendPropertyChanging();
					this._ShipMethodID = value;
					this.SendPropertyChanged("ShipMethodID");
					this.OnShipMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdDetTypeID", DbType="VarChar(8)")]
		public string OrdDetTypeID
		{
			get
			{
				return this._OrdDetTypeID;
			}
			set
			{
				if ((this._OrdDetTypeID != value))
				{
					this.OnOrdDetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrdDetTypeID = value;
					this.SendPropertyChanged("OrdDetTypeID");
					this.OnOrdDetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequencyID", DbType="Int")]
		public System.Nullable<int> PayFrequencyID
		{
			get
			{
				return this._PayFrequencyID;
			}
			set
			{
				if ((this._PayFrequencyID != value))
				{
					this.OnPayFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._PayFrequencyID = value;
					this.SendPropertyChanged("PayFrequencyID");
					this.OnPayFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternationalShipMethodId", DbType="VarChar(8)")]
		public string InternationalShipMethodId
		{
			get
			{
				return this._InternationalShipMethodId;
			}
			set
			{
				if ((this._InternationalShipMethodId != value))
				{
					this.OnInternationalShipMethodIdChanging(value);
					this.SendPropertyChanging();
					this._InternationalShipMethodId = value;
					this.SendPropertyChanged("InternationalShipMethodId");
					this.OnInternationalShipMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SKU_DigitalRiverProduct", Storage="_SKU", ThisKey="SKUID", OtherKey="SKUID", IsForeignKey=true)]
		public SKU SKU
		{
			get
			{
				return this._SKU.Entity;
			}
			set
			{
				SKU previousValue = this._SKU.Entity;
				if (((previousValue != value) 
							|| (this._SKU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SKU.Entity = null;
						previousValue.DigitalRiverProducts.Remove(this);
					}
					this._SKU.Entity = value;
					if ((value != null))
					{
						value.DigitalRiverProducts.Add(this);
						this._SKUID = value.SKUID;
					}
					else
					{
						this._SKUID = default(string);
					}
					this.SendPropertyChanged("SKU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SKU")]
	public partial class SKU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SKUID;
		
		private string _SKUBaseID;
		
		private string _SKUProdType;
		
		private string _SKUProdRelVer;
		
		private string _SKUProdLang;
		
		private string _SKUProdForm;
		
		private string _SKUDesc;
		
		private string _SKUComment;
		
		private double _SKUCamPercRev;
		
		private double _SKUSnagPercRev;
		
		private double _SKUPharPercRev;
		
		private System.Nullable<System.DateTime> _SKUShipDate;
		
		private string _SKUAcctID;
		
		private System.Nullable<bool> _SKUActive;
		
		private System.Nullable<char> _ProductGroupID;
		
		private bool _SKULabelPaper;
		
		private bool _SKUPrintKey;
		
		private bool _SKUShipSeperate;
		
		private bool _SKUStoreAPIRecord;
		
		private int _SKUDisplayOrder;
		
		private EntitySet<DigitalRiverProduct> _DigitalRiverProducts;
		
		private EntitySet<Price> _Prices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSKUIDChanging(string value);
    partial void OnSKUIDChanged();
    partial void OnSKUBaseIDChanging(string value);
    partial void OnSKUBaseIDChanged();
    partial void OnSKUProdTypeChanging(string value);
    partial void OnSKUProdTypeChanged();
    partial void OnSKUProdRelVerChanging(string value);
    partial void OnSKUProdRelVerChanged();
    partial void OnSKUProdLangChanging(string value);
    partial void OnSKUProdLangChanged();
    partial void OnSKUProdFormChanging(string value);
    partial void OnSKUProdFormChanged();
    partial void OnSKUDescChanging(string value);
    partial void OnSKUDescChanged();
    partial void OnSKUCommentChanging(string value);
    partial void OnSKUCommentChanged();
    partial void OnSKUCamPercRevChanging(double value);
    partial void OnSKUCamPercRevChanged();
    partial void OnSKUSnagPercRevChanging(double value);
    partial void OnSKUSnagPercRevChanged();
    partial void OnSKUPharPercRevChanging(double value);
    partial void OnSKUPharPercRevChanged();
    partial void OnSKUShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSKUShipDateChanged();
    partial void OnSKUAcctIDChanging(string value);
    partial void OnSKUAcctIDChanged();
    partial void OnSKUActiveChanging(System.Nullable<bool> value);
    partial void OnSKUActiveChanged();
    partial void OnProductGroupIDChanging(System.Nullable<char> value);
    partial void OnProductGroupIDChanged();
    partial void OnSKULabelPaperChanging(bool value);
    partial void OnSKULabelPaperChanged();
    partial void OnSKUPrintKeyChanging(bool value);
    partial void OnSKUPrintKeyChanged();
    partial void OnSKUShipSeperateChanging(bool value);
    partial void OnSKUShipSeperateChanged();
    partial void OnSKUStoreAPIRecordChanging(bool value);
    partial void OnSKUStoreAPIRecordChanged();
    partial void OnSKUDisplayOrderChanging(int value);
    partial void OnSKUDisplayOrderChanged();
    #endregion
		
		public SKU()
		{
			this._DigitalRiverProducts = new EntitySet<DigitalRiverProduct>(new Action<DigitalRiverProduct>(this.attach_DigitalRiverProducts), new Action<DigitalRiverProduct>(this.detach_DigitalRiverProducts));
			this._Prices = new EntitySet<Price>(new Action<Price>(this.attach_Prices), new Action<Price>(this.detach_Prices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKUID
		{
			get
			{
				return this._SKUID;
			}
			set
			{
				if ((this._SKUID != value))
				{
					this.OnSKUIDChanging(value);
					this.SendPropertyChanging();
					this._SKUID = value;
					this.SendPropertyChanged("SKUID");
					this.OnSKUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUBaseID", DbType="VarChar(20)")]
		public string SKUBaseID
		{
			get
			{
				return this._SKUBaseID;
			}
			set
			{
				if ((this._SKUBaseID != value))
				{
					this.OnSKUBaseIDChanging(value);
					this.SendPropertyChanging();
					this._SKUBaseID = value;
					this.SendPropertyChanged("SKUBaseID");
					this.OnSKUBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUProdType", DbType="VarChar(64)")]
		public string SKUProdType
		{
			get
			{
				return this._SKUProdType;
			}
			set
			{
				if ((this._SKUProdType != value))
				{
					this.OnSKUProdTypeChanging(value);
					this.SendPropertyChanging();
					this._SKUProdType = value;
					this.SendPropertyChanged("SKUProdType");
					this.OnSKUProdTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUProdRelVer", DbType="VarChar(15)")]
		public string SKUProdRelVer
		{
			get
			{
				return this._SKUProdRelVer;
			}
			set
			{
				if ((this._SKUProdRelVer != value))
				{
					this.OnSKUProdRelVerChanging(value);
					this.SendPropertyChanging();
					this._SKUProdRelVer = value;
					this.SendPropertyChanged("SKUProdRelVer");
					this.OnSKUProdRelVerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUProdLang", DbType="VarChar(3)")]
		public string SKUProdLang
		{
			get
			{
				return this._SKUProdLang;
			}
			set
			{
				if ((this._SKUProdLang != value))
				{
					this.OnSKUProdLangChanging(value);
					this.SendPropertyChanging();
					this._SKUProdLang = value;
					this.SendPropertyChanged("SKUProdLang");
					this.OnSKUProdLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUProdForm", DbType="VarChar(10)")]
		public string SKUProdForm
		{
			get
			{
				return this._SKUProdForm;
			}
			set
			{
				if ((this._SKUProdForm != value))
				{
					this.OnSKUProdFormChanging(value);
					this.SendPropertyChanging();
					this._SKUProdForm = value;
					this.SendPropertyChanged("SKUProdForm");
					this.OnSKUProdFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUDesc", DbType="VarChar(64)")]
		public string SKUDesc
		{
			get
			{
				return this._SKUDesc;
			}
			set
			{
				if ((this._SKUDesc != value))
				{
					this.OnSKUDescChanging(value);
					this.SendPropertyChanging();
					this._SKUDesc = value;
					this.SendPropertyChanged("SKUDesc");
					this.OnSKUDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUComment", DbType="VarChar(300)")]
		public string SKUComment
		{
			get
			{
				return this._SKUComment;
			}
			set
			{
				if ((this._SKUComment != value))
				{
					this.OnSKUCommentChanging(value);
					this.SendPropertyChanging();
					this._SKUComment = value;
					this.SendPropertyChanged("SKUComment");
					this.OnSKUCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUCamPercRev", DbType="Float NOT NULL")]
		public double SKUCamPercRev
		{
			get
			{
				return this._SKUCamPercRev;
			}
			set
			{
				if ((this._SKUCamPercRev != value))
				{
					this.OnSKUCamPercRevChanging(value);
					this.SendPropertyChanging();
					this._SKUCamPercRev = value;
					this.SendPropertyChanged("SKUCamPercRev");
					this.OnSKUCamPercRevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUSnagPercRev", DbType="Float NOT NULL")]
		public double SKUSnagPercRev
		{
			get
			{
				return this._SKUSnagPercRev;
			}
			set
			{
				if ((this._SKUSnagPercRev != value))
				{
					this.OnSKUSnagPercRevChanging(value);
					this.SendPropertyChanging();
					this._SKUSnagPercRev = value;
					this.SendPropertyChanged("SKUSnagPercRev");
					this.OnSKUSnagPercRevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUPharPercRev", DbType="Float NOT NULL")]
		public double SKUPharPercRev
		{
			get
			{
				return this._SKUPharPercRev;
			}
			set
			{
				if ((this._SKUPharPercRev != value))
				{
					this.OnSKUPharPercRevChanging(value);
					this.SendPropertyChanging();
					this._SKUPharPercRev = value;
					this.SendPropertyChanged("SKUPharPercRev");
					this.OnSKUPharPercRevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SKUShipDate
		{
			get
			{
				return this._SKUShipDate;
			}
			set
			{
				if ((this._SKUShipDate != value))
				{
					this.OnSKUShipDateChanging(value);
					this.SendPropertyChanging();
					this._SKUShipDate = value;
					this.SendPropertyChanged("SKUShipDate");
					this.OnSKUShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUAcctID", DbType="VarChar(30)")]
		public string SKUAcctID
		{
			get
			{
				return this._SKUAcctID;
			}
			set
			{
				if ((this._SKUAcctID != value))
				{
					this.OnSKUAcctIDChanging(value);
					this.SendPropertyChanging();
					this._SKUAcctID = value;
					this.SendPropertyChanged("SKUAcctID");
					this.OnSKUAcctIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUActive", DbType="Bit")]
		public System.Nullable<bool> SKUActive
		{
			get
			{
				return this._SKUActive;
			}
			set
			{
				if ((this._SKUActive != value))
				{
					this.OnSKUActiveChanging(value);
					this.SendPropertyChanging();
					this._SKUActive = value;
					this.SendPropertyChanged("SKUActive");
					this.OnSKUActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupID", DbType="Char(1)")]
		public System.Nullable<char> ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKULabelPaper", DbType="Bit NOT NULL")]
		public bool SKULabelPaper
		{
			get
			{
				return this._SKULabelPaper;
			}
			set
			{
				if ((this._SKULabelPaper != value))
				{
					this.OnSKULabelPaperChanging(value);
					this.SendPropertyChanging();
					this._SKULabelPaper = value;
					this.SendPropertyChanged("SKULabelPaper");
					this.OnSKULabelPaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUPrintKey", DbType="Bit NOT NULL")]
		public bool SKUPrintKey
		{
			get
			{
				return this._SKUPrintKey;
			}
			set
			{
				if ((this._SKUPrintKey != value))
				{
					this.OnSKUPrintKeyChanging(value);
					this.SendPropertyChanging();
					this._SKUPrintKey = value;
					this.SendPropertyChanged("SKUPrintKey");
					this.OnSKUPrintKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUShipSeperate", DbType="Bit NOT NULL")]
		public bool SKUShipSeperate
		{
			get
			{
				return this._SKUShipSeperate;
			}
			set
			{
				if ((this._SKUShipSeperate != value))
				{
					this.OnSKUShipSeperateChanging(value);
					this.SendPropertyChanging();
					this._SKUShipSeperate = value;
					this.SendPropertyChanged("SKUShipSeperate");
					this.OnSKUShipSeperateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUStoreAPIRecord", DbType="Bit NOT NULL")]
		public bool SKUStoreAPIRecord
		{
			get
			{
				return this._SKUStoreAPIRecord;
			}
			set
			{
				if ((this._SKUStoreAPIRecord != value))
				{
					this.OnSKUStoreAPIRecordChanging(value);
					this.SendPropertyChanging();
					this._SKUStoreAPIRecord = value;
					this.SendPropertyChanged("SKUStoreAPIRecord");
					this.OnSKUStoreAPIRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUDisplayOrder", DbType="Int NOT NULL")]
		public int SKUDisplayOrder
		{
			get
			{
				return this._SKUDisplayOrder;
			}
			set
			{
				if ((this._SKUDisplayOrder != value))
				{
					this.OnSKUDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._SKUDisplayOrder = value;
					this.SendPropertyChanged("SKUDisplayOrder");
					this.OnSKUDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SKU_DigitalRiverProduct", Storage="_DigitalRiverProducts", ThisKey="SKUID", OtherKey="SKUID")]
		public EntitySet<DigitalRiverProduct> DigitalRiverProducts
		{
			get
			{
				return this._DigitalRiverProducts;
			}
			set
			{
				this._DigitalRiverProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SKU_Price", Storage="_Prices", ThisKey="SKUID", OtherKey="SKUID")]
		public EntitySet<Price> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DigitalRiverProducts(DigitalRiverProduct entity)
		{
			this.SendPropertyChanging();
			entity.SKU = this;
		}
		
		private void detach_DigitalRiverProducts(DigitalRiverProduct entity)
		{
			this.SendPropertyChanging();
			entity.SKU = null;
		}
		
		private void attach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.SKU = this;
		}
		
		private void detach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.SKU = null;
		}
	}
}
#pragma warning restore 1591
